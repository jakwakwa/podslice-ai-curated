--
alwaysApply: true
---
# Schema source of truth for PODSLICE (v0-ai-curated-podcast-app)

## CRITICAL: Use these exact field names in Prisma queries

### Database Schema Uses Snake Case with @map Directives
Your Prisma schema uses `@map` directives to map camelCase field names to snake_case database columns.

### ✅ CORRECT Field Names (Use These)

#### Episode Model Relations
```typescript
// Episode relations
userProfile: UserCurationProfile?  // ✅ CORRECT (camelCase)
bundle: Bundle?                    // ✅ CORRECT (camelCase)

// Database field names (in where clauses)
user_id: string                    // ✅ CORRECT (snake_case)
profile_id: string                 // ✅ CORRECT (snake_case)
bundle_id: string                  // ✅ CORRECT (snake_case)
podcast_id: string                 // ✅ CORRECT (snake_case)
```

#### Bundle Model Relations
```typescript
// Bundle relations  
bundle_podcast: BundlePodcast[]    // ✅ CORRECT (snake_case)
user_curation_profile: UserCurationProfile[] // ✅ CORRECT (snake_case)

// Database field names
bundle_id: string                  // ✅ CORRECT
owner_user_id: string              // ✅ CORRECT
```

#### UserCurationProfile Model Relations
```typescript
// UserCurationProfile relations
selectedBundle: Bundle?            // ✅ CORRECT (camelCase)
user: User                         // ✅ CORRECT (camelCase)

// Database field names
profile_id: string                 // ✅ CORRECT
user_id: string                    // ✅ CORRECT
selected_bundle_id: string         // ✅ CORRECT selected_bundle_id: // ✅ CORRECT

```

### ❌ WRONG Field Names (Never Use These)
```typescript
// ❌ WRONG - Don't use these
user_profile: UserCurationProfile?
selected_bundle: Bundle?
bundlePodcast: BundlePodcast[]
userProfile: UserCurationProfile?  // This is correct for Episode model
```

### Correct API Query Patterns

#### Episode Query Pattern
```typescript
const episodes = await prisma.episode.findMany({
  where: {
    OR: [
      { userProfile: { user_id: userId } },           // ✅ CORRECT
      {
        bundle: {
          user_curation_profile: {                    // ✅ CORRECT
            some: { user_id: userId },
          },
        },
      },
    ],
  },
  include: {
    podcast: true,
    userProfile: {                                    // ✅ CORRECT
      include: {
        selectedBundle: {                             // ✅ CORRECT
          include: {
            bundle_podcast: {                         // ✅ CORRECT
              include: { podcast: true },
            },
          },
        },
      },
    },
    bundle: {                                         // ✅ CORRECT
      include: {
        bundle_podcast: {                             // ✅ CORRECT
          include: { podcast: true },
        },
      },
    },
  },
  orderBy: { created_at: "desc" },                   // ✅ CORRECT
})
```

---

## AI Agent Instructions

- **ALWAYS** check this rule before writing or editing any Prisma query.
- **NEVER** assume all relations are camelCase or snake_case—use the exact field names above.
- **ALWAYS** check existing API routes for field name patterns.
- **NEVER** copy field names from old rules or out-of-date documentation.
- **If in doubt, check `prisma/schema.prisma` directly.**

---

## Emergency Fix Protocol

If casing issues are reintroduced:
1. **IMMEDIATELY** revert the changes.
2. Check this document for correct field names.
3. Use the existing working API routes as reference.
4. **NEVER** regenerate Prisma client or change schema without verifying field names.

---

**This rule is the single source of truth for all Prisma field names and relation casing in this project.**
