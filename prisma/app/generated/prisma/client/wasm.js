
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.EpisodeFeedbackScalarFieldEnum = {
  feedback_id: 'feedback_id',
  userId: 'userId',
  episodeId: 'episodeId',
  rating: 'rating',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BundleScalarFieldEnum = {
  bundle_id: 'bundle_id',
  name: 'name',
  description: 'description',
  image_url: 'image_url',
  is_static: 'is_static',
  is_active: 'is_active',
  owner_user_id: 'owner_user_id',
  created_at: 'created_at'
};

exports.Prisma.BundlePodcastScalarFieldEnum = {
  bundle_id: 'bundle_id',
  podcast_id: 'podcast_id'
};

exports.Prisma.EpisodeScalarFieldEnum = {
  episode_id: 'episode_id',
  podcast_id: 'podcast_id',
  profile_id: 'profile_id',
  bundle_id: 'bundle_id',
  title: 'title',
  description: 'description',
  audio_url: 'audio_url',
  image_url: 'image_url',
  published_at: 'published_at',
  week_nr: 'week_nr',
  created_at: 'created_at'
};

exports.Prisma.NotificationScalarFieldEnum = {
  notification_id: 'notification_id',
  user_id: 'user_id',
  type: 'type',
  message: 'message',
  is_read: 'is_read',
  created_at: 'created_at'
};

exports.Prisma.PodcastScalarFieldEnum = {
  podcast_id: 'podcast_id',
  name: 'name',
  description: 'description',
  url: 'url',
  image_url: 'image_url',
  category: 'category',
  is_active: 'is_active',
  owner_user_id: 'owner_user_id',
  created_at: 'created_at'
};

exports.Prisma.ProfilePodcastScalarFieldEnum = {
  profile_id: 'profile_id',
  podcast_id: 'podcast_id'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  subscription_id: 'subscription_id',
  user_id: 'user_id',
  link_customer_id: 'link_customer_id',
  link_subscription_id: 'link_subscription_id',
  link_price_id: 'link_price_id',
  status: 'status',
  current_period_start: 'current_period_start',
  current_period_end: 'current_period_end',
  trail_start: 'trail_start',
  trial_end: 'trial_end',
  canceled_at: 'canceled_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserScalarFieldEnum = {
  user_id: 'user_id',
  name: 'name',
  email: 'email',
  password: 'password',
  image: 'image',
  email_verified: 'email_verified',
  is_admin: 'is_admin',
  email_notifications: 'email_notifications',
  in_app_notifications: 'in_app_notifications',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserCurationProfileScalarFieldEnum = {
  profile_id: 'profile_id',
  user_id: 'user_id',
  name: 'name',
  status: 'status',
  audio_url: 'audio_url',
  image_url: 'image_url',
  created_at: 'created_at',
  updated_at: 'updated_at',
  generated_at: 'generated_at',
  last_generation_date: 'last_generation_date',
  next_generation_date: 'next_generation_date',
  is_active: 'is_active',
  is_bundle_selection: 'is_bundle_selection',
  selected_bundle_id: 'selected_bundle_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.FeedbackRating = exports.$Enums.FeedbackRating = {
  THUMBS_UP: 'THUMBS_UP',
  THUMBS_DOWN: 'THUMBS_DOWN',
  NEUTRAL: 'NEUTRAL'
};

exports.Prisma.ModelName = {
  EpisodeFeedback: 'EpisodeFeedback',
  Bundle: 'Bundle',
  BundlePodcast: 'BundlePodcast',
  Episode: 'Episode',
  Notification: 'Notification',
  Podcast: 'Podcast',
  ProfilePodcast: 'ProfilePodcast',
  Subscription: 'Subscription',
  User: 'User',
  UserCurationProfile: 'UserCurationProfile'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
